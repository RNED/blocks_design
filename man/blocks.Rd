% Generated by roxygen2 (4.0.1): do not edit by hand
\name{blocks}
\alias{blocks}
\title{Block designs}
\usage{
blocks(treatments, replicates, blocklevels = hcf, searches = min(64,
  floor(4096/nunits)))
}
\arguments{
\item{treatments}{A list of treatment replication sets showing the number of treatments in each replication set of the design.}

\item{replicates}{A list of replication numbers for each replication set in the design.
The treatments and replications lists must be equal in length and each matching pair represents
a set of treatments with a given replication.}

\item{blocklevels}{An optional list of nested blocks.
The numbers in the list define the number of nested blocks in each blocks stratum with the first number
giving the number of main blocks and the succesive numbers, if any, giving the number of nested
blocks in each preceding block. The default is a maximal set of complete orthogonal randomised blocks.}

\item{searches}{An optional parameter for the number of local optima searched during
a design optimization. The default setting decreases with increasing design size.}
}
\value{
\item{Design}{Data frame showing block and treatment factors for each plot}
\item{Plan}{Data frame showing treatments allocation to plots for each block}
\item{Incidences[[i]]}{Blocks by treatments incidence matrices  i=1... for each stratum in the design}
\item{Efficiencies}{Data frame showing the A-efficiency and an upper bound, where available, for each stratum in the design}
}
\description{
\code{blocks} Block designs for unstructured treatments with arbitrary depth of nesting
}
\details{
Constructs nested block designs for unstructured treatment sets where treatments can have arbitrary replication
and blocks can be nested to any arbitrary depth of nesting. Block sizes in the same stratum
are as equal as possible in size and never differ by more than a single plot. Each nested blocks stratum is optimized subject to the treatments in the
preceding higher strata remaining unchanged. In general, block designs are  optimized algorithmically by a swapping algorithm that maximizes the determinant of
the information matrix (D-optimality) but certain special lattice designs (see vignette) are constructed algebraically.
Lattice designs with number of treatments equal to the square of a prime-power are constructed by using the 'crossdes' package.

The treatments parameter list and the replications parameter list comprise matching pairs of numbers that define the number of treatments and the
number of replicates in each replication set. Treatments are numbered consecutively according to the ordering
of the treatment sets in the parameter lists (see the first blockdesigns example below).

All designs are fully randomized within the constraints of the nested block structure.

The design outputs are a data frame for the allocation of treatments to blocks, a design plan, tables
showing the blocks-by-treatments incidence matrix for each nested stratum of the design and a table showing the
achieved A-efficiency of each blocks stratum in the design together with an A-fficiency upper
bounds, where available.
}
\examples{
# incidences for 2 replicates of 3 treatments, 4 replicates of 2 treatments and 3 replicates of 4 treatments in a completely randomized design
blocks(treatments=c(3,2,4),replicates=c(2,4,3))$Incidences[[1]]

# 4 replicates of 50 treatments in complete randomized blocks
blocks(treatments=50,replicates=4)

blocks(treatments=50,replicates=4,blocklevels=c(4,5))

# as above but with 20 additional single replicate treatments
blocks(treatments=c(50,20),replicates=c(4,1),blocklevels=c(4,5))

# tabulation of 4 replicates of 4 treatments and 8 replicates of 1 treatment with 4 main blocks and 8 nested blocks in each main block
table(blocks(treatments=c(4,1),replicates=c(4,8))$Design)

# concurrences for 3 replicates of 36 treatments with 3 main blocks and 6 nested blocks
crossprod(blocks(treatments=36,replicates=3,blocklevels=c(3,6))$Incidences[[2]])

# 4 replicates of 64 treatments with 4 main blocks and five 2-level nesting factors
blocks(treatments=64,replicates=4,blocklevels=c(4,2,2,2,2,2))

# 9 replicates of 19 treatments in 19 blocks with extra searches (may require even more for a BIB solution)
blocks(19,9,19,searches=1000)
}

