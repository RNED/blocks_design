% Generated by roxygen2 (4.0.2): do not edit by hand
\name{blocks}
\alias{blocks}
\title{Block designs}
\usage{
blocks(treatments, replicates, blocklevels = NULL, searches = NULL,
  seed = NULL, jumps = NULL)
}
\arguments{
\item{treatments}{a list giving a partition of the total number of treatments into
sets where all treatments in the same set have the same replication.}

\item{replicates}{a list assigning the replication level of each set in the \code{treatments} list.}

\item{blocklevels}{a list of block levels where the first level is the number of main blocks and the remaining
levels, if any, are the succesive nested levels of a hierarchy of nested sub-blocks.
The default is an orthogonal main blocks design.}

\item{searches}{an optional integer parameter for the number of local optima searched during an optimization.
The default is the minimum of 32 or the ceiling of 4096 divided by the number of units.}

\item{seed}{an optional integer parameter for initializing the random number generator. The default
is a random integer seed in the range 1:100000.}

\item{jumps}{an optional integer parameter for the number of random jumps used to escape a local maxima in each stratum.
The default is a single jump.}
}
\value{
\item{Design}{Data frame showing the listing of treatments allocated to blocks}
\item{Plan}{Data frame showing a plan of treatments allocated to sub-plots within blocks}
\item{Incidences}{Blocks-by-treatments incidence matrices, one for each stratum of the design}
\item{Efficiencies}{Data frame showing the achieved efficiencies for each stratum of the design together with an A-efficiency upper-bound, where available}
\item{Progression}{Data frames showing the number of searches for each progressive improvement in design efficiency for each stratum of the design}
\item{Seed}{Numerical seed for random number generator}
\item{Searches}{Maximum number of searches in each stratum}
\item{Jumps}{Number of jumps to escape a local maxima in each stratum}
}
\description{
Constructs nested block designs for unstructured treatments with arbitrary replication,
not necessarily all equal, and arbitrary depth of nesting.
}
\details{
The algorithm optimizes the allocation of treatments to blocks for a nested blocks design
with arbitrary treatment replicaton and arbitrary depth of nesting.
The main blocks in the top stratum of the design are optimized unconditionally and then the nested blocks, if any,
are optimized hierarchically from largest to smallest with each new set of nested blocks optimized within the blocks of the preceding strata.
Thus each blocks stratum is optimized conditionally allowing for preceding blocks in the hierarchy but ignoring
succeeding blocks.

If the blocks in the top stratum have k replicates with v**2 equally replicated treatments in blocks of size v
and k <= 3 for any v, or k <= v+1 for prime or prime-power v, or k <= 4 for v = 10,
the top stratum is a regular lattice design and is constructed algebraically.
All other block designs are constructed algoritmically by a D-optimality algorithm that makes
improving treatment swaps between blocks unconditionally in the top stratum or conditional on blocks being nested within
the blocks of a preceding stratum for nested blocks.

The algorithm searches for a local maxima in each stratum of the design with the number of searches dependent on the \code{searches} parameter.
Prior to strating a new search, the algorithm escapes any existing local maxima by one or more random jumps dependent on the \code{jumps} parameter.

The design outputs include a data design frame showing the allocation of blocks and treatments to plots, a plan data design frame showing a schematic
allocation of treatments to blocks, a set of incidence matrices, one for each stratum, showing the incidences of treatments with blocks,
an efficiencies data frame showing the achieved A- and D-efficiencies together with A-upper bounds, where available, for the completed design and
finally a progression data frame showing progressive steps with repeated searches. Progression shows the number of searches, the D-efficiency and the
A-efficiency for each improvement in the design and may be useful for assessing whether a larger number of searches are needed. The effects of channges
in the \code{jumps} parameter can be assessed by comparing between runs.

\code{treatments} is a list of sets where the sum of the sets is the required number of treatments
and the treatments in any one set are all equally replicated.

\code{replicates} is a list of replication numbers for sets in the \code{treatments} list.
Treatments are numbered consecutively according to the order of the sets
and treatments with the same replication can be split between two or more sets if required.

\code{blocklevels} is a list of nested block levels for the succesive nested blocks strata of the design.
The first level is the number of main blocks
and the successive levels, if any, are the numbers of sub-blocks in the succesive strata of
the nested blocks design.
The length of the list is the number of strata and the
running products of the levels are the total blocks in each successive stratum of the
design. Blocks in the same stratum are always equal in size or differ by, at most, a
single unit. The default is the highest common factor of the replication levels,
which gives a main blocks design with a maximal set of complete orthogonal main blocks.

The \code{searches} parameter is the number of local optima searched during an optimization.
Increasing the number of searches may improve the efficiency of a design but
 will also increase the search time.

The \code{seed} parameter is an integer used to initialize the random number generator. The
 default is a random integer but any fixed positive integer can be used instead,if required.

Blocks and treatments are fully randomized within the constraints of a nested blocks design.
}
\examples{
# 3 treatments with 2 reps, 2 treatments with 4 reps, 4 treatments with 3 reps
# the hcf of the replication numbers is 1 and the default design is a completely randomized design
blocks(treatments=c(3,2,4),replicates=c(2,4,3))

# 50 treatments with 4 reps in 4 complete randomized blocks
blocks(treatments=50,replicates=4)

# as above but with 4 main blocks and 5 nested blocks within each main block
blocks(treatments=50,replicates=4,blocklevels=c(4,5))

# as above but with 20 additional single replicate treatments, one to each block
blocks(treatments=c(50,20),replicates=c(4,1),blocklevels=c(4,5))

# 64 treatments with 2 reps and 2 main blocks with five 2-level nested factors
blocks(treatments=64,replicates=2,blocklevels=c(2,2,2,2,2,2),searches=4)

# concurrence matrices of 36 treatments with 3 reps and 3 main blocks with 6 nested blocks
crossprod(blocks(treatments=36,replicates=3,blocklevels=c(3,6))$Incidences[[2]])

# concurrence matrix for 13 treatments with 4 reps and 13 treatments with one rep in 13 blocks
crossprod(blocks(c(13,13),c(4,1),13,searches=100)$Incidences[[1]])
}
\references{
Sailer, M. O. (2013). crossdes: Construction of Crossover Designs. R package version 1.1-1. http://CRAN.R-project.org/package=crossdes
}

