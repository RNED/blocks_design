% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/blocks.r
\name{blocks}
\alias{blocks}
\title{Block designs}
\usage{
blocks(treatments, replicates = 1, rows = NULL, columns = NULL,
  model = NULL, searches = NULL, seed = sample(10000, 1), jumps = 1)
}
\arguments{
\item{treatments}{either a data frame with columns for the individual treatment factors or a set of cardinal numbers giving a partition of the total required number of treatments into sets of equally replicated treatments.}

\item{replicates}{either a single replication number for a factorial treatment set or a set of replication numbers, one for each equally replicated treatment set in the partition of an unstructured treatment set.}

\item{rows}{a set of nested row block levels for the row blocks in each succesive stratum of the blocks design taken in order from the highest to the lowest. 
The default is a single set of main blocks equal to the hcf of the replication numbers.}

\item{columns}{a set of nested column block level for the column blocks in each succesive stratum of the blocks design taken in order from the highest to the lowest. 
The \code{rows} and the \code{columns} parameters, if both present, must be of equal length. The null default defines a single column block for each nested stratum
 which results in a simple nested blocks design in every stratum.}

\item{model}{a model equation for the treatment factors in the design where the model equation is defined by using the model.matrix notation
in the {\link[stats]{model.matrix}} package. If undefined, the model is assumed to be a full factorial model.}

\item{searches}{the maximum number of local optima searched for a design optimization. The default is 1 plus the floor of 10000 divided by the number of plots.}

\item{seed}{an integer initializing the random number generator. The default is a random seed.}

\item{jumps}{the number of pairwise random treatment swaps used to escape a local maxima. The default is a single swap.}
}
\value{
\item{Treatments}{The treatment factors defined by the \code{treatments} inputs in standard factorial order.}
\item{model.matrix}{The model.matrix used to define the \code{treatments} design.}
\item{Design}{Data frame giving the optimized block and treatment factors in plot order.}
\item{Plan}{Data frame for single factor designs showing a plan view of the treatment design in the bottom stratum of the design. A NULL plan is returned for multi-factor designs.}
\item{Efficiencies}{The achieved A- and D-efficiencies for each stratum of the design together with an A-efficiency upper-bound, where available}
\item{seed}{Numerical seed for random number generator}
\item{searches}{Maximum number of searches in each stratum}
\item{jumps}{Number of random treatment swaps to escape a local maxima}
}
\description{
Constructs randomized nested and crossed block designs for factorial or unstructured treatment sets where blocks can have any feasible depth of nesting.
}
\details{
\code{blocksdesign} constructs nested block designs with arbitrary depth of nesting. The top stratum is assumed to be a single super-block 
and succesive strata are nested hierarchically down to any feasible depth of nesting. Blocks strata are optimized hierarchically from the
top downwards with the blocks of each nested stratum optimized conditionally on the blocks of the preceding strata in the hierarchy. 

The default block design in each stratum is a crossed row-and-column design but defaulting to a single column block in any stratum of the 
design gives a simple nested blocks design in that stratum.

The treatment design can be either a single unstructured treatment set for any arbitrary number of treatments
 each with any arbitrary number of replications or a 
factorial treatment set with any arbitrary combination of quantitative or qualitative level treatment factors and any arbitrary factorial model.

For unstructured treatment sets, the \code{treatments} parameter should be a set of cardinal numbers that partition the total number of treatments into
sub-sets of equally replicated treatments. In this mode, the \code{replicates} parameter should be a set of replication numbers with one replication 
number for each treatment set in the \code{treatments} parameter. 

For a factorial treatment set, the \code{treatments} parameter should be a data frame containing a suitable factorial treatment design where the rows 
are the individual treatment combinations and the columns are the individual treatment factors, which can be either qualitative or quantitative.
In this mode, the \code{replicates} parameter should be a single number for the number of complete repeats of the data frame design (usually one). 

The factorial model for a factorial treatment design is defined by a model formula based on the notation used in the \code{\link[stats]{model.matrix}} package.
The default factorial model is a complete set of factorial effects but the \code{models} formula can be used to define any feasible reduced set of factorial effects
for the treatment design. The \code{models} formula has no effect on single unstructured treatment sets.      

The \code{rows} parameter, if any, defines the nested row blocks in each nested stratum taken in order from the highest to the lowest.
The first number, if any, is the number of rows in the blocks of the top stratum, the second, if any, is the number of rows in the nested blocks of
 the second stratum, the third, if any, is the number of rows in the nested blocks of the third stratum and so on for all the required strata in the design. 
 
The \code{columns} parameter, if any, defines the nested column blocks in each nested stratum taken in order from the highest to the lowest. 
The first number, if any, is the number of columns in the blocks of the top stratum, the second, if any, is the number of columns in the nested blocks of
 the second stratum, the third, if any, is the number of columns in the nested blocks of the third stratum and so on for all the required strata in the design. 
  
The \code{rows} and \code{columns} parameters, if defined, must be of equal length and if a simple nested blocks design is required for 
any particular stratum, the number of columns in that stratum should be set to unity.

If both the \code{rows} parameter and the \code{columns} parameter are null, the default block design will be a single set of orthogonal
main blocks equal in number to the highest common factor of the replication numbers. If the \code{rows} parameter is defined but the \code{columns} parameter
is null, the design will comprise simple nested blocks in each stratum as defined by the \code{rows} parameter.

Block sizes are always as nearly equal as possible and will never differ by more than a single plot in any particular block stratum classification.
Row blocks and column blocks must always contain at least two plots per block and this restriction will constrain the 
permitted numbers of rows and columns in the various strata of a design.

Unreplicated treatments are allowed and any simple nested block design can be augmented by any number of single unreplicated treatments to give augmented 
blocks that never differ in size by more than a single plot. General crossed block designs are more complex and currently 
the algorithm will only accommodate single unreplicated treatments in a crossed block design if the block sizes of the replicated part 
of the design are all equal in each stratum of the design.

 For nested row-and-column designs, the algorithm will optimize the rows stratum first, conditional on any higher order strata, and will then optimise the columns
 stratum conditional on the rows stratum. 
 
 Row-and-column designs may contain nested blocks with two or more plots in some or all of the row-by-column intersections but,
 currently, the algorithm does not consider the efficiency of rows-by-columns intersection blocks except for the special case of Trojan designs
 which have optimal blocks and which are constructed algebraically by \code{blocksdesign} from mutually orthogonal Latin squares (MOLS), see Edmondson R. N. (1998).
 
 The special class of balanced lattice designs are also constructed algebraically by \code{blocksdesign} from mutually orthogonal Latin squares (MOLS) and also have optimal blocks, 
 Cochran & Cox 1957.          
 
 For 2 x 2 row-and-column designs with complete replicate rows and complete replicate columns, one treatment contrast will always be confounded
 with the row-by-column interaction and for these designs, it is impossible to nest a non-singular block design in the rows-by-columns intersections. 
 Instead, we recommend a simple nested blocks design with two complete or four incomplete main blocks. 
 
 Lattice designs and Trojan designs based on prime-power MOLS require the \code{\link[crossdes]{MOLS}} package.

 The principle design outputs comprise:
\itemize{
 \item  A data frame showing the allocation of treatments to blocks with successive nested strata arranged in standard block order. \cr
 \item  A table showing the replication number of each treatment in the design. \cr
 \item  A table showing the block levels and the achieved D- and A-efficiency factors for each blocks stratum together with A-efficiency upper bounds, 
 where available. \cr
 \item  A plan showing the allocation of treatments to blocks or to rows and to columns in the bottom stratum of the design (simple unstructured treatment 
 designs only).\cr
}
}
\examples{

# First-order model for five qualitative 2-level factors in 4 randomized blocks
treatments =data.frame( F1=gl(2,16), F2=gl(2,8,32),  F3=gl(2,4,32), F4=gl(2,2,32) , F5=gl(2,1,32)  )
blocks(treatments=treatments,model="~ F1+F2+F3+F4+F5",rows=c(2,2),columns=c(1,2),searches=5)

# Full factorial for two 2-level factors with three replicates in 6 randomized blocks 
treatments =data.frame( f1=gl(2,6,12), f2=gl(2,3,12))
blocks(treatments=treatments,rows=6,searches=5) # incomplete blocks with .6667 efficiency

# Linear regression model for one 6-level numeric factor in 2 randomized blocks
TF=data.frame(X=c(1:6))
blocks(treatments=TF,model=" ~ (X)",rows=2,searches=5)

# Quadratic regression model for a 6-level numeric factor in 2 randomized blocks
TF=data.frame(X=c(1:6))
blocks(treatments=TF,model=" ~ (X + I(X^2))",rows=2,searches=5) 

# Second-order model for five qualitative 2-level factors in 4 blocks
TF=data.frame( F1=gl(2,16), F2=gl(2,8,32),  F3=gl(2,4,32), F4=gl(2,2,32) , F5=gl(2,1,32) )
blocks(treatments=TF,model=" ~ (F1+F2+F3+F4+F5)*(F1+F2+F3+F4+F5)",rows=4,searches=5)

# Second-order design for four qualitative 3-level factors in 9 randomized blocks
# may need many more searches to ensure orthogonal blocks 
TF=data.frame( F1=gl(3,27), F2=gl(3,9,81),  F3=gl(3,3,81), F4=gl(3,1,81)  )
blocks(treatments=TF,model=" ~ (F1+F2+F3+F4)*(F1+F2+F3+F4)",rows=9, searches=10)

# Second-order model for two qualitative and two quantitative factors in 4 randomized blocks 
 # may need many more searches to ensure optimal design
TF=data.frame(F1=gl(2,36), F2=gl(3,12,72), V1=rep(rep(1:3,each=4),6), V2=rep(1:4,18))
modform=" ~ F1*F2 + V1*V2 + I(V1^2) + I(V2^2) + F1:V1 + F1:V2 + F2:V1 + F2:V2"
blocks(treatments=TF,model=modform,rows=4,searches=10)

# 3 treatments x 2 replicates, 2 treatments x 4 replicates and 4 treatments x 3 replicates  
# the hcf of the replication numbers is 1 therefore the default design is completely randomized 
blocks(treatments=c(3,2,4),replicates=c(2,4,3))

# 4 treatments x 4 replicates with 2 main rows each containing two complete replicates  
blocks(treatments=4,replicates=4,rows=2)

# 50 treatments x 4 replicates with 4 main rows and 5 nested sub-rows in each main block 
blocks(treatments=50,replicates=4,rows=c(4,5))

# as above but with 20 single replicate treatments giving one extra treatment per sub-block
blocks(treatments=c(50,20),replicates=c(4,1),rows=c(4,5))

# 64 treatments x 2 replicates with 2 main rows and four succesively nested 2-level factors
blocks(treatments=64,replicates=2,rows=c(2,2,2,2,2))

# 6 replicates of 6 treatments in 4 rows of size 9 (non-binary block design)
blocks(treatments=6,replicates=6,rows=4)

# 4 replicates of 13 treatments arranged in a 13 x 4 Youden rectangle 
blocks(treatments=13,replicates=4,rows=13,columns=4)

# 64 treatments x 2 replicates with nested 8 x 8 row-and-column designs in two main blocks 
blocks(treatments=64,replicates=2,rows=c(2,8),columns=c(1,8)) 

# 64 treatments x 2 replicates with two main blocks and a 4 x 4 row-and-column design  
# nested in each main block
blocks(treatments=64,replicates=2,rows=c(2,4),columns=c(1,4),searches=12) 

# 64 treatments x 2 replicates with two main blocks and a 4 x 4 row-and-column design  
# nested in each main block.
blocks(treatments=64,replicates=2,rows=c(2,4),columns=c(1,4),searches=12)

         
}
\references{
Sailer, M. O. (2013). crossdes: Construction of Crossover Designs. R package version 1.1-1. http://CRAN.R-project.org/package=crossdes
Edmondson R. N. (1998). Trojan square and incomplete Trojan square designs for crop research. Journal of Agricultural Science, Cambridge, 131, pp.135-142
Cochran, W.G., and G.M. Cox. 1957. Experimental Designs, 2nd ed., Wiley, New York.
}

