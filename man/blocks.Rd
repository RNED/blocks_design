% Generated by roxygen2 (4.0.2): do not edit by hand
\name{blocks}
\alias{blocks}
\title{Block designs}
\usage{
blocks(treatments, replicates, blocklevels = NULL, searches = NULL,
  seed = NULL)
}
\arguments{
\item{treatments}{a list partitioning the total number of treatments into sets of equally replicated treatments.}

\item{replicates}{a list assigning a replication level to each set of equally replicated treatments.}

\item{blocklevels}{a list of nested block levels where the first level is the number of main blocks
and the remaining levels, if any, are the sub-blocks levels for a hierarchy of nested sub-blocks.
The default is the highest common factor of the \code{replicates} list.}

\item{searches}{the number of local optima searched during an optimization. The default is the minimum of 64 or the integer quotient of 4096
divided by the number of plots.}

\item{seed}{an integer seed for initializing the random number generator where a design must be reproducible. The default is a random seed.}
}
\value{
\item{Design}{Data frame showing the blocks, plots and and treatment factors}
\item{Plan}{Data frame showing the allocation of treatments to sub-plots within blocks}
\item{Incidences}{List of blocks-by-treatments incidence matrices, one for each stratum in the design}
\item{Efficiencies}{Data frame showing the A-efficiency factor for each stratum in the design together with an upper bound, where available}
\item{seed}{Numerical seed for random number generator}
}
\description{
Constructs nested block designs for unstructured treatment sets with arbitrary replication, not necessarily all equal, and arbitrary depth of nesting.
}
\details{
The \code{blocks} function constructs optimized nested block designs for unstructured treatment sets where treatments can have any arbitrary replication, not necessarily all equal,
and blocks can have any feasible depth of nesting.

The treatments are defined by the \code{treatments} and \code{replicates} parameter lists where the \code{treatments} list partitions the
total number of treatments into sets of equally replicated treatments and the \code{replicates} list provides the replication for each set.
The two lists must be of equal length and the treatment numbers and the replication numbers are paired by their index positions in the two lists.
The replication numbers in the \code{replicates} list need not be unique and treatments are labelled consecutively according to the ordering of
the treatment sets in the two lists.

The \code{blocklevels} list defines the blocks strata of the design where the first level in the list is the number of main blocks
and the succesive levels, if any, are the nested levels of a hierarchy of nested sub-blocks. Each nested level is the number of sub-blocks
nested in each block of the preceding stratum. The list length is the number of strata
in the design and the cumulative products of the levels for any stratum are the total numbers of blocks for that stratum.
The default design is a main blocks design with complete set of othogonal blocks.

Block sizes in any given stratum are equal if the cumulative number of blocks for that stratum exactly divides the total number of plots,
otherwise they differ by, at most, a single unit.

Balanced lattice designs exist for sets of v**2 equally replicated treatments in blocks of size v with k replicates
if sets of k mutually orthogonal latin squares (MOLS) exist. \code{blocks} constructs regular lattice designs algebraicaly
when k <= 3 or when v is prime or prime-power and k <= v+1 or when v = 10 and k <= 4. Where required, the \code{crossdes} package is
used to construct prime-power MOLS.

All other non-lattice block designs are constructed algorithmically by a swapping algorithm that seeks to maximize the determinant of
the information matrix (D-optimality). Beginning with the main blocks stratum, the swapping algorithm swaps pairs of treatments between
sub-blocks nested within the preceding blocks until no further improvement is possible and a local optima is attained. If the number of searches
is greater than one, the algorithm escapes a the local optima by a number of random swaps and then continues
until another local optima is attained. This continues for the selected number of searches and the best overall local
design is retained for that stratum. Eventually, the bottom stratum is optimized after which the algorithm stops.

Optimized designs are fully randomized with each set of nested blocks randomized within the preceding set of blocks and with
the  treatments randomized within the bottom set of blocks.
}
\examples{
# 3 treatments with 2 reps, 2 treatments with 4 reps, 4 treatments with 3 reps
# the hcf of the replication numbers is 1 and the default design is a completely randomized design
blocks(treatments=c(3,2,4),replicates=c(2,4,3))

# 50 treatments with 4 reps in 4 complete randomized blocks
blocks(treatments=50,replicates=4)

# as above but with 4 main blocks and 5 nested blocks within each main block
blocks(treatments=50,replicates=4,blocklevels=c(4,5))

# as above but with 20 additional single replicate treatments, one to each block
blocks(treatments=c(50,20),replicates=c(4,1),blocklevels=c(4,5))

# 64 treatments with 2 reps and 2 main blocks with five 2-level nested factors
blocks(treatments=64,replicates=2,blocklevels=c(2,2,2,2,2,2),searches=4)

# concurrence matrices of 36 treatments with 3 reps and 3 main blocks with 6 nested blocks
crossprod(blocks(treatments=36,replicates=3,blocklevels=c(3,6))$Incidences[[2]])

# concurrence matrix for 13 treatments with 4 reps and 13 treatments with one rep in 13 blocks
crossprod(blocks(c(13,13),c(4,1),13,searches=100)$Incidences[[1]])
}
\references{
Sailer, M. O. (2013). crossdes: Construction of Crossover Designs. R package version 1.1-1. http://CRAN.R-project.org/package=crossdes
}

